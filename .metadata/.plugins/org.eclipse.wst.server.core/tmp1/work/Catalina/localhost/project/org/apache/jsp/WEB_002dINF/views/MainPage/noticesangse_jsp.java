/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.102
 * Generated at: 2025-04-22 08:28:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.MainPage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class noticesangse_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 최성현 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <meta name=\"description\" content=\"3부상조 공지사항 상세 - 공지사항의 세부 내용을 확인하세요.\">\r\n");
      out.write("    <title>3부상조 - 공지사항 상세</title>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        } /* 기본 스타일 초기화 */\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Roboto', sans-serif;\r\n");
      out.write("            line-height: 1.6;\r\n");
      out.write("            background-color: #f0f8ff; /* Light sky blue background */\r\n");
      out.write("            color: #333;\r\n");
      out.write("        } /* 전체 페이지 스타일 */\r\n");
      out.write("\r\n");
      out.write("        /* Header */\r\n");
      out.write("        header {\r\n");
      out.write("            background-color: #87ceeb; /* Light sky blue */\r\n");
      out.write("            padding: 1rem 2rem;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            position: sticky;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            z-index: 1000;\r\n");
      out.write("            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        } /* 헤더 스타일 정의 */\r\n");
      out.write("\r\n");
      out.write("        #logo a {\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-size: 1.8rem;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("        } /* 로고 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .nav-menu {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            list-style: none;\r\n");
      out.write("            gap: 1.5rem;\r\n");
      out.write("        } /* 네비게이션 메뉴 컨테이너 */\r\n");
      out.write("\r\n");
      out.write("        .nav-menu li a {\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            padding: 0.5rem 1rem;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        } /* 네비게이션 메뉴 링크 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .nav-menu li a:hover {\r\n");
      out.write("            background-color: #6ab7d5;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("        } /* 네비게이션 링크 호버 효과 */\r\n");
      out.write("\r\n");
      out.write("        /* Mobile Menu Button */\r\n");
      out.write("        .mobile-menu-btn {\r\n");
      out.write("            display: none;\r\n");
      out.write("            background: none;\r\n");
      out.write("            border: none;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("        } /* 모바일 메뉴 버튼 (기본 숨김) */\r\n");
      out.write("\r\n");
      out.write("        .mobile-menu-btn span {\r\n");
      out.write("            display: block;\r\n");
      out.write("            width: 25px;\r\n");
      out.write("            height: 3px;\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            margin: 5px 0;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        } /* 모바일 메뉴 버튼 아이콘 스타일 */\r\n");
      out.write("\r\n");
      out.write("        /* Mobile Menu */\r\n");
      out.write("        .mobile-nav {\r\n");
      out.write("            display: none;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            top: 0;\r\n");
      out.write("            right: -100%;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            background-color: #87ceeb;\r\n");
      out.write("            padding: 5rem 2rem;\r\n");
      out.write("            transition: right 0.3s ease;\r\n");
      out.write("            z-index: 999;\r\n");
      out.write("        } /* 모바일 네비게이션 메뉴 (기본 숨김) */\r\n");
      out.write("\r\n");
      out.write("        .mobile-nav.active {\r\n");
      out.write("            right: 0;\r\n");
      out.write("        } /* 모바일 네비게이션 활성화 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .mobile-nav ul {\r\n");
      out.write("            list-style: none;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            gap: 1.5rem;\r\n");
      out.write("        } /* 모바일 네비게이션 메뉴 리스트 */\r\n");
      out.write("\r\n");
      out.write("        .mobile-nav ul li a {\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-size: 1.2rem;\r\n");
      out.write("            padding: 0.5rem;\r\n");
      out.write("            display: block;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        } /* 모바일 네비게이션 링크 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .mobile-nav ul li a:hover {\r\n");
      out.write("            background-color: #6ab7d5;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("        } /* 모바일 네비게이션 링크 호버 효과 */\r\n");
      out.write("\r\n");
      out.write("        /* Main Content */\r\n");
      out.write("        main {\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 2rem auto;\r\n");
      out.write("            padding: 0 2rem;\r\n");
      out.write("        } /* 메인 콘텐츠 레이아웃 */\r\n");
      out.write("\r\n");
      out.write("        /* Notice Detail */\r\n");
      out.write("        .notice-detail {\r\n");
      out.write("            background-color: #fff;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            padding: 2rem;\r\n");
      out.write("            animation: slideUp 0.8s ease-out;\r\n");
      out.write("        } /* 공지사항 상세 섹션 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .notice-detail h1 {\r\n");
      out.write("            font-size: 2rem;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin-bottom: 1rem;\r\n");
      out.write("        } /* 공지사항 제목 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .notice-meta {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            gap: 1rem;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            color: #666;\r\n");
      out.write("            margin-bottom: 1.5rem;\r\n");
      out.write("            border-bottom: 1px solid #eee;\r\n");
      out.write("            padding-bottom: 1rem;\r\n");
      out.write("        } /* 메타 정보 (작성자, 날짜, 조회수, 좋아요) 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .notice-meta span {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            gap: 0.3rem;\r\n");
      out.write("        } /* 메타 정보 항목 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .importance-badge {\r\n");
      out.write("            background-color: #ff6b6b;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            padding: 0.2rem 0.5rem;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            font-size: 0.8rem;\r\n");
      out.write("        } /* 중요 공지 배지 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .importance-badge.normal {\r\n");
      out.write("            background-color: #6ab7d5;\r\n");
      out.write("        } /* 일반 공지 배지 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .notice-content {\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin-bottom: 1.5rem;\r\n");
      out.write("            line-height: 1.8;\r\n");
      out.write("        } /* 공지사항 본문 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .notice-image {\r\n");
      out.write("            max-width: 100%;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            margin: 1rem 0;\r\n");
      out.write("        } /* 공지사항 이미지 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .action-buttons {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 1rem;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            margin-bottom: 2rem;\r\n");
      out.write("        } /* 액션 버튼 컨테이너 */\r\n");
      out.write("\r\n");
      out.write("        .action-buttons button {\r\n");
      out.write("            padding: 0.5rem 1rem;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        } /* 버튼 기본 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .like-btn {\r\n");
      out.write("            background-color: #87ceeb;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("        } /* 좋아요 버튼 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .like-btn:hover {\r\n");
      out.write("            background-color: #6ab7d5;\r\n");
      out.write("        } /* 좋아요 버튼 호버 효과 */\r\n");
      out.write("\r\n");
      out.write("        .back-btn {\r\n");
      out.write("            background-color: #ccc;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        } /* 목록으로 버튼 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .back-btn:hover {\r\n");
      out.write("            background-color: #bbb;\r\n");
      out.write("        } /* 목록으로 버튼 호버 효과 */\r\n");
      out.write("\r\n");
      out.write("        /* Comment Section */\r\n");
      out.write("        .comment-section {\r\n");
      out.write("            margin-top: 2rem;\r\n");
      out.write("            border-top: 1px solid #eee;\r\n");
      out.write("            padding-top: 2rem;\r\n");
      out.write("        } /* 댓글 섹션 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .comment-section h2 {\r\n");
      out.write("            font-size: 1.5rem;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            margin-bottom: 1rem;\r\n");
      out.write("        } /* 댓글 섹션 제목 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .comment-form {\r\n");
      out.write("            margin-bottom: 2rem;\r\n");
      out.write("        } /* 댓글 작성 폼 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .comment-form textarea {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            min-height: 100px;\r\n");
      out.write("            padding: 0.5rem;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            resize: vertical;\r\n");
      out.write("            margin-bottom: 0.5rem;\r\n");
      out.write("        } /* 댓글 입력 textarea 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .comment-form button {\r\n");
      out.write("            padding: 0.5rem 1rem;\r\n");
      out.write("            background-color: #87ceeb;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        } /* 댓글 제출 버튼 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .comment-form button:hover {\r\n");
      out.write("            background-color: #6ab7d5;\r\n");
      out.write("        } /* 댓글 제출 버튼 호버 효과 */\r\n");
      out.write("\r\n");
      out.write("        .comment-list {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-direction: column;\r\n");
      out.write("            gap: 1rem;\r\n");
      out.write("        } /* 댓글 목록 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .comment-item {\r\n");
      out.write("            border-bottom: 1px solid #eee;\r\n");
      out.write("            padding: 1rem 0;\r\n");
      out.write("        } /* 개별 댓글 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .comment-item:last-child {\r\n");
      out.write("            border-bottom: none;\r\n");
      out.write("        } /* 마지막 댓글의 하단 테두리 제거 */\r\n");
      out.write("\r\n");
      out.write("        .comment-meta {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 1rem;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            color: #666;\r\n");
      out.write("            margin-bottom: 0.5rem;\r\n");
      out.write("        } /* 댓글 메타 정보 (작성자, 날짜) 스타일 */\r\n");
      out.write("\r\n");
      out.write("        .comment-content {\r\n");
      out.write("            font-size: 1rem;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        } /* 댓글 본문 스타일 */\r\n");
      out.write("\r\n");
      out.write("        /* Animations */\r\n");
      out.write("        @keyframes slideUp {\r\n");
      out.write("            from { transform: translateY(20px); opacity: 0; }\r\n");
      out.write("            to { transform: translateY(0); opacity: 1; }\r\n");
      out.write("        } /* 슬라이드 업 애니메이션 */\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- Header -->\r\n");
      out.write("    <header>\r\n");
      out.write("        <div id=\"logo\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">3부상조</a></div> <!-- 로고 -->\r\n");
      out.write("        <nav>\r\n");
      out.write("            <ul class=\"nav-menu\">\r\n");
      out.write("                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/notice\">공지사항</a></li> <!-- 공지사항 링크 -->\r\n");
      out.write("                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login\">로그인</a></li> <!-- 로그인 링크 -->\r\n");
      out.write("                <li><a href=\"#\">개인정보</a></li> <!-- 개인정보 링크 -->\r\n");
      out.write("            </ul>\r\n");
      out.write("        </nav>\r\n");
      out.write("        <button class=\"mobile-menu-btn\">\r\n");
      out.write("            <span></span> <!-- 모바일 메뉴 버튼 라인 -->\r\n");
      out.write("            <span></span> <!-- 모바일 메뉴 버튼 라인 -->\r\n");
      out.write("            <span></span> <!-- 모바일 메뉴 버튼 라인 -->\r\n");
      out.write("        </button>\r\n");
      out.write("    </header>\r\n");
      out.write("\r\n");
      out.write("    <!-- Mobile Menu -->\r\n");
      out.write("    <nav class=\"mobile-nav\">\r\n");
      out.write("        <ul>\r\n");
      out.write("            <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/notice\">공지사항</a></li> <!-- 모바일 공지사항 링크 -->\r\n");
      out.write("            <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login\">로그인</a></li> <!-- 모바일 로그인 링크 -->\r\n");
      out.write("            <li><a href=\"#\">개인정보</a></li> <!-- 모바일 개인정보 링크 -->\r\n");
      out.write("        </ul>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <!-- Main Content -->\r\n");
      out.write("    <main>\r\n");
      out.write("        <section class=\"notice-detail\">\r\n");
      out.write("            <h1>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1> <!-- 게시글 제목 -->\r\n");
      out.write("            <div class=\"notice-meta\">\r\n");
      out.write("                <span>📧 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.emp_email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> <!-- 작성자 이메일 -->\r\n");
      out.write("                <span>📅 ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.created_at}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> <!-- 작성일 -->\r\n");
      out.write("                <span>👁️ ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.view_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> <!-- 조회수 -->\r\n");
      out.write("                <span>❤️ ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.like_count}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> <!-- 좋아요 수 -->\r\n");
      out.write("                <span class=\"importance-badge ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.importance == '중요' ? '' : 'normal'}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.importance}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span> <!-- 중요도 -->\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"notice-content\">\r\n");
      out.write("                ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" <!-- 게시글 본문 -->\r\n");
      out.write("            </div>\r\n");
      out.write("            <c:if test=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty board.f_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/uploads/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.f_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" alt=\"공지사항 이미지\" class=\"notice-image\"> <!-- 게시글 이미지 -->\r\n");
      out.write("            </c:if>\r\n");
      out.write("            <div class=\"action-buttons\">\r\n");
      out.write("                <button class=\"like-btn\" onclick=\"incrementLike(");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")\">좋아요</button> <!-- 좋아요 버튼 -->\r\n");
      out.write("                <button class=\"back-btn\" onclick=\"window.location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/notice'\">목록으로</button> <!-- 목록으로 버튼 -->\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Comment Section -->\r\n");
      out.write("            <section class=\"comment-section\">\r\n");
      out.write("                <h2>댓글</h2> <!-- 댓글 섹션 제목 -->\r\n");
      out.write("                <div class=\"comment-form\">\r\n");
      out.write("                    <form id=\"commentForm\" onsubmit=\"submitComment(event, ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(")\">\r\n");
      out.write("                        <textarea name=\"comment_content\" placeholder=\"댓글을 입력하세요...\" required></textarea> <!-- 댓글 입력 -->\r\n");
      out.write("                        <button type=\"submit\">댓글 작성</button> <!-- 댓글 제출 버튼 -->\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"comment-list\">\r\n");
      out.write("                    <!-- 댓글 목록 (빈 상태로 유지) -->\r\n");
      out.write("                </div>\r\n");
      out.write("            </section>\r\n");
      out.write("        </section>\r\n");
      out.write("    </main>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
